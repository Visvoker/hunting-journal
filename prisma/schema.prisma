// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Prisma schema for Monster hunting dashboard

model User {
  id              Int           @id @default(autoincrement())
  username        String        @unique // 帳號
  password        String // 密碼
  email           String        @unique // 電子郵件
  discordId       String?       @unique // Discord 使用者 ID（可選）
  discordUsername String? // Discord 使用者名稱#標籤
  monsterList     UserMonster[] // 玩家加入的怪物清單
}

model Monster {
  id              Int           @id @default(autoincrement())
  name            String // 怪物名稱
  imageUrl        String // 圖片 URL
  level           Int // 等級
  attribute       String // 屬性（如 Fire/Water/...）
  hp              Int // 血量
  exp             Int // 經驗值
  money           String // 掉落金錢
  defensePhysical Int // 物理防禦力
  defenseMagic    Int // 魔法防禦力
  evasionRate     Int // 迴避率（1–100）
  accuracy        String // 命中率（accuracy）
  drops           MonsterDrop[] @relation("MonsterDrops")
  UserMonster     UserMonster[]
}

model DropItem {
  id           Int           @id @default(autoincrement())
  nameZh       String?
  nameEn       String?
  iconUrl      String? // 圖片（如果有的話）
  monsterDrops MonsterDrop[]
}

/// 定義怪物的掉落物品，僅規格化，不帶使用者狀態
model MonsterDrop {
  id               Int               @id @default(autoincrement())
  monster          Monster           @relation("MonsterDrops", fields: [monsterId], references: [id])
  monsterId        Int
  dropItem         DropItem          @relation(fields: [dropItemId], references: [id])
  dropItemId       Int
  // 其他掉落細節
  userMonsterDrops UserMonsterDrop[]
}

/// 玩家針對特定怪物的收藏、進度與狀態，以及個人備註
model UserMonster {
  id             Int               @id @default(autoincrement())
  user           User              @relation(fields: [userId], references: [id])
  userId         Int
  monster        Monster           @relation(fields: [monsterId], references: [id])
  monsterId      Int
  joinedAt       DateTime          @default(now()) // 加入到 dashboard 的時間
  notes          String? // 玩家對此怪物的小筆記
  collectedDrops UserMonsterDrop[] // 玩家針對此怪物的掉落勾選狀態
}

/// 玩家對每個掉落物的勾選狀態
model UserMonsterDrop {
  id            Int         @id @default(autoincrement())
  userMonster   UserMonster @relation(fields: [userMonsterId], references: [id])
  userMonsterId Int
  monsterDrop   MonsterDrop @relation(fields: [monsterDropId], references: [id])
  monsterDropId Int
  isCollected   Boolean     @default(false) // 玩家是否至少獲得一件
  quantity      Int         @default(0) // 玩家獲得的數量
}
